name: Build Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build release APK (unsigned)
      run: ./gradlew assembleRelease

    - name: Upload release APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-unsigned
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90

    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes
          
          ### Added
          - New features in this release
          
          ### Fixed
          - Bug fixes in this release
          
          ### Changed
          - Changes in this release
          
          ## Download
          
          Download the APK from the artifacts section below or from the release assets.
          
          **Note:** This APK is unsigned and intended for testing purposes only.
        draft: true
        prerelease: false

    - name: Upload Release Asset
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: emuready-${{ github.ref_name }}-unsigned.apk
        asset_content_type: application/vnd.android.package-archive